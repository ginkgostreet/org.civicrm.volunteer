<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2019
 *
 * Generated from C:\xampp\htdocs\civicrm-volunteer\sites\default\files\civicrm\ext\org.civicrm.volunteer\xml/schema/CRM/Volunteer/VolunteerAppeal.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:8c8faa3e1dfccd0b975372dc86e82ff0)
 */

/**
 * Database access object for the VolunteerAppeal entity.
 */
class CRM_Volunteer_DAO_VolunteerAppeal extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_volunteer_appeal';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Volunteer Appeal ID
   *
   * @var int unsigned
   */
  public $id;

  /**
   * The Foreign key to the Volunteer Project for this record.
   *
   * @var int unsigned
   */
  public $project_id;

  /**
   * The title of the Volunteer Appeal
   *
   * @var string
   */
  public $title;

  /**
   * The Image of the Volunteer Appeal.
   *
   * @var string
   */
  public $image;

  /**
   * Appeal Teaser
   *
   * @var text
   */
  public $appeal_teaser;

  /**
   * Appeal Description
   *
   * @var text
   */
  public $appeal_description;

  /**
   * FK to Location Block ID
   *
   * @var int unsigned
   */
  public $loc_block_id;

  /**
   * Location Done Anywhere "1" Means Location Done Anywhere True and "0" Means not true.
   *
   * @var int
   */
  public $location_done_anywhere;

  /**
   * Volunteer Appeal is Active or not. "1" Means "Active" and "0" Means Not Active.
   *
   * @var int
   */
  public $is_appeal_active;

  /**
   * Active From Date of Appeal
   *
   * @var date
   */
  public $active_fromdate;

  /**
   * Active To Date of Appeal
   *
   * @var date
   */
  public $active_todate;

  /**
   * Display Volunteer Shift or not.
   *
   * @var int
   */
  public $display_volunteer_shift;

  /**
   * Hide Volunteer Appeal Button or not. "1" means Hide and "0" means Not Hide.
   *
   * @var int
   */
  public $hide_appeal_volunteer_button;

  /**
   * Show Project Information of Appeal Detail Page or not.
   *
   * @var int
   */
  public $show_project_information;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_volunteer_appeal';
    parent::__construct();
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static ::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'project_id', 'civicrm_volunteer_project', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName() , 'loc_block_id', 'civicrm_loc_block', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('CiviVolunteer Appeal ID', array('domain' => 'org.civicrm.volunteer')) ,
          'description' => CRM_Volunteer_ExtensionUtil::ts('Unique Volunteer Appeal ID'),
          'required' => TRUE,
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'project_id' => [
          'name' => 'project_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('CiviVolunteer Project ID') ,
          'description' => CRM_Volunteer_ExtensionUtil::ts('Foreign key to the Volunteer Project for this record'),
          'required' => true,
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'FKClassName' => 'CRM_Volunteer_DAO_Project',
          'localizable' => 0,
        ],
        'title' => [
          'name' => 'title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Opportunity Title'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('The title of the Volunteer Opportunity'),
          'required' => true,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'image' => [
          'name' => 'image',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Opportunity Image'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('The Image of the Volunteer Opportunity.'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'appeal_teaser' => [
          'name' => 'appeal_teaser',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Opportunity Teaser'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Opportunity Teaser'),
          'required' => false,
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'appeal_description' => [
          'name' => 'appeal_description',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Opportunity Description'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Full description of the Volunteer Appeal. Text and HTML allowed.'),
          'required' => false,
          'rows' => 8,
          'cols' => 60,
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'html' => array(
            'type' => 'RichTextEditor',
          ),
          'localizable' => 0,
        ],
        'loc_block_id' => array(
          'name' => 'loc_block_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Location Block ID') ,
          'description' => 'FK to Location Block ID',
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'FKClassName' => 'CRM_Core_DAO_LocBlock',
        ),
        'location_done_anywhere' => [
          'name' => 'location_done_anywhere',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Set Location done anywhere parameter for Volunteer Appeal.'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Location Done Anywhere "1" Means Location Done Anywhere True and "0" Means not true.'),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'is_appeal_active' => [
          'name' => 'is_appeal_active',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Volunteer Opportunity Active Or Not'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Volunteer Opportunity is Active or not. '),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'active_fromdate' => [
          'name' => 'active_fromdate',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Active From Date for Opportunity'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Active From Date for Opportunity'),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'active_todate' => [
          'name' => 'active_todate',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Active To Date for Opportunity'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Active To Date for Opportunity'),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'display_volunteer_shift' => [
          'name' => 'display_volunteer_shift',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Display Volunteer Shift or not.'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Display Volunteer Shift or not.'),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'hide_appeal_volunteer_button' => [
          'name' => 'hide_appeal_volunteer_button',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Hide Volunteer Button or not.'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Hide Volunteer Button or not.'),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
        'show_project_information' => [
          'name' => 'show_project_information',
          'type' => CRM_Utils_Type::T_INT,
          'title' => CRM_Volunteer_ExtensionUtil::ts('Show Project Information.'),
          'description' => CRM_Volunteer_ExtensionUtil::ts('Show Project Information on Opportunity Detail Page.'),
          'table_name' => 'civicrm_volunteer_appeal',
          'entity' => 'VolunteerAppeal',
          'bao' => 'CRM_Volunteer_DAO_VolunteerAppeal',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'volunteer_appeal', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'volunteer_appeal', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
